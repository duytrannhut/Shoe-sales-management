/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.shoessys.ui;

import com.itextpdf.awt.FontMapper;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfTemplate;
import com.itextpdf.text.pdf.PdfWriter;
import com.shoessys.ultil.MsgBox;
import com.shoessys.ultil.Xdate;
import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;
import java.io.File;
import java.io.FileOutputStream;
import java.text.MessageFormat;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import org.jfree.chart.JFreeChart;


/**
 *
 * @author trann
 */
public class ThongKeJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ThongKeJPanel
     */
    public ThongKeJPanel() {
        initComponents();
        tkspPanel = new TKSanPhamJPanel((String) cboTKTheo.getSelectedItem(), dcNgayBD.getDate(), dcNgayKT.getDate());
        pnlBody.add(tkspPanel);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSanPham = new keeptoo.KButton();
        btnDonHang = new keeptoo.KButton();
        btnDoanhThu = new keeptoo.KButton();
        jSeparator1 = new javax.swing.JSeparator();
        pnlBody = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cboTKTheo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        dcNgayBD = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        dcNgayKT = new com.toedter.calendar.JDateChooser();
        btnXuatFile = new keeptoo.KButton();

        setBackground(new java.awt.Color(255, 255, 255));

        btnSanPham.setText("Sản phẩm");
        btnSanPham.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSanPham.setkEndColor(new java.awt.Color(51, 0, 255));
        btnSanPham.setkHoverEndColor(new java.awt.Color(47, 226, 0));
        btnSanPham.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnSanPham.setkHoverStartColor(new java.awt.Color(51, 0, 255));
        btnSanPham.setkPressedColor(new java.awt.Color(40, 61, 90));
        btnSanPham.setkStartColor(new java.awt.Color(47, 226, 0));
        btnSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSanPhamActionPerformed(evt);
            }
        });

        btnDonHang.setText("Đơn hàng");
        btnDonHang.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDonHang.setkEndColor(new java.awt.Color(51, 0, 255));
        btnDonHang.setkHoverEndColor(new java.awt.Color(250, 156, 10));
        btnDonHang.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnDonHang.setkHoverStartColor(new java.awt.Color(51, 0, 255));
        btnDonHang.setkPressedColor(new java.awt.Color(40, 61, 90));
        btnDonHang.setkStartColor(new java.awt.Color(250, 156, 10));
        btnDonHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDonHangActionPerformed(evt);
            }
        });

        btnDoanhThu.setText("Doanh thu");
        btnDoanhThu.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDoanhThu.setkEndColor(new java.awt.Color(51, 0, 255));
        btnDoanhThu.setkHoverEndColor(new java.awt.Color(255, 129, 129));
        btnDoanhThu.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnDoanhThu.setkHoverStartColor(new java.awt.Color(51, 0, 255));
        btnDoanhThu.setkPressedColor(new java.awt.Color(40, 61, 90));
        btnDoanhThu.setkStartColor(new java.awt.Color(255, 129, 129));
        btnDoanhThu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoanhThuActionPerformed(evt);
            }
        });

        pnlBody.setLayout(new java.awt.CardLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("TK theo:");

        cboTKTheo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboTKTheo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Năm", "Tháng" }));
        cboTKTheo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTKTheoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Ngày bắt đầu:");

        dcNgayBD.setDateFormatString("MM/dd/yyyy");
        dcNgayBD.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dcNgayBD.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dcNgayBDPropertyChange(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Ngày kết thúc:");

        dcNgayKT.setDateFormatString("MM/dd/yyyy");
        dcNgayKT.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dcNgayKT.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dcNgayKTPropertyChange(evt);
            }
        });

        btnXuatFile.setText("Xuất file");
        btnXuatFile.setFocusPainted(false);
        btnXuatFile.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXuatFile.setkBorderRadius(15);
        btnXuatFile.setkEndColor(new java.awt.Color(51, 0, 255));
        btnXuatFile.setkHoverEndColor(new java.awt.Color(83, 140, 150));
        btnXuatFile.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnXuatFile.setkHoverStartColor(new java.awt.Color(40, 61, 90));
        btnXuatFile.setkPressedColor(new java.awt.Color(83, 140, 150));
        btnXuatFile.setkSelectedColor(new java.awt.Color(83, 140, 150));
        btnXuatFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(btnSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(btnDonHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77)
                        .addComponent(btnDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 798, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 10, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlBody, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnXuatFile, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboTKTheo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dcNgayBD, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dcNgayKT, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDonHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboTKTheo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dcNgayKT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(dcNgayBD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBody, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXuatFile, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSanPhamActionPerformed
        if(tkspPanel==null){
            tkspPanel = new TKSanPhamJPanel((String) cboTKTheo.getSelectedItem(), dcNgayBD.getDate(), dcNgayKT.getDate());
            pnlBody.removeAll();
            pnlBody.add(tkspPanel);
            pnlBody.updateUI();
            tkdhPanel = null;
            tkdtPanel = null;
        }
        
    }//GEN-LAST:event_btnSanPhamActionPerformed

    private void btnDonHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDonHangActionPerformed
        if(tkdhPanel==null){
            tkdhPanel = new TKDonHangJPanel((String) cboTKTheo.getSelectedItem(), dcNgayBD.getDate(), dcNgayKT.getDate());
            pnlBody.removeAll();
            pnlBody.add(tkdhPanel);
            pnlBody.updateUI();
            tkspPanel = null;
            tkdtPanel = null;
        }
    }//GEN-LAST:event_btnDonHangActionPerformed

    private void btnDoanhThuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoanhThuActionPerformed
        if(tkdtPanel==null){
            tkdtPanel = new TKDoanhThuJPanel((String) cboTKTheo.getSelectedItem(), dcNgayBD.getDate(), dcNgayKT.getDate());
            pnlBody.removeAll();
            pnlBody.add(tkdtPanel);
            pnlBody.updateUI();
            tkspPanel = null;
            tkdhPanel = null;
        }
    }//GEN-LAST:event_btnDoanhThuActionPerformed

    private void cboTKTheoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTKTheoActionPerformed
        if(tkspPanel!=null){
            TKSanPhamJPanel.fillChart((String) cboTKTheo.getSelectedItem(), dcNgayBD.getDate(), dcNgayKT.getDate());
        }else if(tkdhPanel!=null){
            TKDonHangJPanel.fillChart((String) cboTKTheo.getSelectedItem(), dcNgayBD.getDate(), dcNgayKT.getDate());
        }else if(tkdtPanel!=null){
            TKDoanhThuJPanel.fillChart((String) cboTKTheo.getSelectedItem(), dcNgayBD.getDate(), dcNgayKT.getDate());
        }
    }//GEN-LAST:event_cboTKTheoActionPerformed

    private void btnXuatFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatFileActionPerformed
        if(tkspPanel!=null){
            this.xuatFile(TKSanPhamJPanel.chart, TKSanPhamJPanel.tblSanPham);
        }else if(tkdhPanel!=null){
            this.xuatFile(TKDonHangJPanel.chart, TKDonHangJPanel.tblDonHang);
        }else if(tkdtPanel!=null){
            this.xuatFile(TKDoanhThuJPanel.chart, TKDoanhThuJPanel.tblDoanhThu);
        }
    }//GEN-LAST:event_btnXuatFileActionPerformed

    private void dcNgayBDPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dcNgayBDPropertyChange
        if(dcNgayBD.getDate()!=null && dcNgayKT.getDate()!=null){
            if(dcNgayBD.getDate().getTime()>dcNgayKT.getDate().getTime()){
                MsgBox.alert(this, "Ngày bắt đầu không thể lớn hơn ngày kết thúc!");
                return;
            }
        }
        if(tkspPanel!=null){
            TKSanPhamJPanel.fillChart((String) cboTKTheo.getSelectedItem(), dcNgayBD.getDate(), dcNgayKT.getDate());
        }else if(tkdhPanel!=null){
            TKDonHangJPanel.fillChart((String) cboTKTheo.getSelectedItem(), dcNgayBD.getDate(), dcNgayKT.getDate());
        }else if(tkdtPanel!=null){
            TKDoanhThuJPanel.fillChart((String) cboTKTheo.getSelectedItem(), dcNgayBD.getDate(), dcNgayKT.getDate());
        }
    }//GEN-LAST:event_dcNgayBDPropertyChange

    private void dcNgayKTPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dcNgayKTPropertyChange
        if(dcNgayBD.getDate()!=null && dcNgayKT.getDate()!=null){
            if(dcNgayBD.getDate().getTime()>dcNgayKT.getDate().getTime()){
                MsgBox.alert(this, "Ngày bắt đầu không thể lớn hơn ngày kết thúc!");
                return;
            }
        }
        if(tkspPanel!=null){
            TKSanPhamJPanel.fillChart((String) cboTKTheo.getSelectedItem(), dcNgayBD.getDate(), dcNgayKT.getDate());
        }else if(tkdhPanel!=null){
            TKDonHangJPanel.fillChart((String) cboTKTheo.getSelectedItem(), dcNgayBD.getDate(), dcNgayKT.getDate());
        }else if(tkdtPanel!=null){
            TKDoanhThuJPanel.fillChart((String) cboTKTheo.getSelectedItem(), dcNgayBD.getDate(), dcNgayKT.getDate());
        }
    }//GEN-LAST:event_dcNgayKTPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KButton btnDoanhThu;
    private keeptoo.KButton btnDonHang;
    private keeptoo.KButton btnSanPham;
    private keeptoo.KButton btnXuatFile;
    private javax.swing.JComboBox<String> cboTKTheo;
    private com.toedter.calendar.JDateChooser dcNgayBD;
    private com.toedter.calendar.JDateChooser dcNgayKT;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel pnlBody;
    // End of variables declaration//GEN-END:variables
    private TKSanPhamJPanel tkspPanel;
    private TKDonHangJPanel tkdhPanel;
    private TKDoanhThuJPanel tkdtPanel;
    
    public void xuatFile(JFreeChart chart, JTable jtable){
        JFileChooser chooser = new JFileChooser();
        int x = chooser.showSaveDialog(this);
        if(x==JFileChooser.APPROVE_OPTION){
            File file = chooser.getSelectedFile();
            Document document = new Document(PageSize.A4, 50, 50, 50, 50);
            try {
                PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(file + ".pdf"));
                document.open();
                
                BaseFont baseFont = BaseFont.createFont("Font/vuArial.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                Font fontHeader = new Font(baseFont, 22f, Font.BOLD);
                Font fontBody = new Font(baseFont, 11f);
                
                Image image = Image.getInstance(getClass().getResource("/com/shoessys/icon/icons8_bee_32px.png"));
                Paragraph tenCTY = new Paragraph("SmartBees", fontBody);
                tenCTY.setSpacingBefore(-25);
                tenCTY.setIndentationLeft(35);
                Paragraph phCty = new Paragraph();
                phCty.add(image);
                phCty.add(tenCTY);
                
                Paragraph phHeader = new Paragraph("BÁO CÁO THỐNG KÊ", fontHeader);
                phHeader.setAlignment(Element.ALIGN_CENTER);
                Paragraph phTime = new Paragraph(cboTKTheo.getSelectedItem()+": "+Xdate.toString(dcNgayBD.getDate(), "yyyy")+" - "+Xdate.toString(dcNgayKT.getDate(), "yyyy"), fontBody);
                if(Xdate.toString(dcNgayBD.getDate(), "yyyy").equals(Xdate.toString(dcNgayKT.getDate(), "yyyy"))){
                    phTime = new Paragraph(cboTKTheo.getSelectedItem()+": "+Xdate.toString(dcNgayBD.getDate(), "yyyy"), fontBody);
                }
                if(cboTKTheo.getSelectedItem().equals("Tháng")){
                    phTime = new Paragraph(cboTKTheo.getSelectedItem()+": "+Xdate.toString(dcNgayBD.getDate(), "MM/yyyy")+" - "+Xdate.toString(dcNgayKT.getDate(), "MM/yyyy"), fontBody);
                    if(Xdate.toString(dcNgayBD.getDate(), "MM/yyyy").equals(Xdate.toString(dcNgayKT.getDate(), "MM/yyyy"))){
                        phTime = new Paragraph(cboTKTheo.getSelectedItem()+": "+Xdate.toString(dcNgayBD.getDate(), "MM/yyyy"), fontBody);
                    }
                }
                phTime.setAlignment(Element.ALIGN_CENTER);
             
                PdfContentByte contentByte = writer.getDirectContent();
                PdfTemplate template = contentByte.createTemplate(document.getPageSize().getWidth(), 250);
                Graphics2D graphics2d = template.createGraphics(document.getPageSize().getWidth(), 250, arialuni);
                Rectangle2D rectangle2d = new Rectangle2D.Double(0, 0, document.getPageSize().getWidth(), 250);

                chart.draw(graphics2d, rectangle2d);
                graphics2d.dispose();
                contentByte.addTemplate(template, 0, 450);
                
                Paragraph phTbl = new Paragraph();
                phTbl.setSpacingBefore(270);
                PdfPTable table = new PdfPTable(2);
                table.setWidthPercentage(100);
                for(int i=0;i<jtable.getColumnCount();i++){
                    table.addCell(new Phrase(jtable.getColumnName(i),fontBody));
                }
                for(int i=0;i<jtable.getRowCount();i++){
                    for(int j=0;j<jtable.getColumnCount();j++){
                        table.addCell(new Phrase(jtable.getValueAt(i, j).toString(), fontBody));
                    }
                }
                phTbl.add(table);
                document.add(phCty);
                document.add(phHeader);
                document.add(phTime);
                document.add(phTbl);
                document.close();
                MsgBox.alert(this, "Xuất file báo thành công!");
            }catch(Exception e){
                e.printStackTrace();
            }
        }
    }
    FontMapper arialuni = new FontMapper() {
        @Override
        public BaseFont awtToPdf(java.awt.Font font) {
            try {
                return BaseFont.createFont("Font/vuArial.ttf", 
                        BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
            } catch (Exception e) {
            }
            return null;
        }

        @Override
        public java.awt.Font pdfToAwt(BaseFont bf, int i) {
            return null;
        }
    };
}
