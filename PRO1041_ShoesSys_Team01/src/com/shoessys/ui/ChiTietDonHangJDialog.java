/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.shoessys.ui;

import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.shoessys.dao.DonHangChiTietDAO;
import com.shoessys.dao.LoaiDAO;
import com.shoessys.dao.NhaCungCapDAO;
import com.shoessys.dao.SanPhamDAO;
import com.shoessys.entity.DonHangChiTiet;
import com.shoessys.entity.Loai;
import com.shoessys.entity.NhaCungCap;
import com.shoessys.entity.SanPham;
import com.shoessys.ultil.MsgBox;
import com.shoessys.ultil.Ximage;
import com.shoessys.ultil.Xrender;
import java.io.File;
import java.io.FileOutputStream;
import java.text.NumberFormat;
import java.util.List;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author trann
 */
public class ChiTietDonHangJDialog extends javax.swing.JDialog {

    /**
     * Creates new form ChiTietDonHangJDialog
     */
    public ChiTietDonHangJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.init();
    }
    public ChiTietDonHangJDialog(java.awt.Frame parent, boolean modal, int madh, int makh, String tenkh, String ngaydat) {
        super(parent, modal);
        initComponents();
        this.madh = madh;
        this.makh = makh;
        this.tenkh = tenkh;
        this.ngaydat = ngaydat;
        this.init();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlTitle = new javax.swing.JPanel();
        lblClose = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        scrollPaneSP = new javax.swing.JScrollPane();
        pnlSPs = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblChiTiet = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        lblMaDH = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cboGioiTinh = new javax.swing.JComboBox<>();
        cboNhaCC = new javax.swing.JComboBox<>();
        cboLoai = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        btnCapNhat = new keeptoo.KButton();
        btnXuatHD = new keeptoo.KButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Chi Tiết Đơn Hàng");
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        pnlTitle.setBackground(new java.awt.Color(255, 255, 255));
        pnlTitle.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlTitleMouseDragged(evt);
            }
        });
        pnlTitle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlTitleMousePressed(evt);
            }
        });

        lblClose.setBackground(new java.awt.Color(255, 255, 255));
        lblClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/shoessys/icon/icons8_delete_15px.png"))); // NOI18N
        lblClose.setOpaque(true);
        lblClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblCloseMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnlTitleLayout = new javax.swing.GroupLayout(pnlTitle);
        pnlTitle.setLayout(pnlTitleLayout);
        pnlTitleLayout.setHorizontalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTitleLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblClose, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlTitleLayout.setVerticalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblClose, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jSeparator1.setOpaque(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Danh sách sản phẩm:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Giới tính:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Loại:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Nhà cung cấp:");

        txtSearch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtSearch.setForeground(new java.awt.Color(153, 153, 153));
        txtSearch.setText("Tên sản phẩm");
        txtSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSearchFocusLost(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        scrollPaneSP.setBorder(null);
        scrollPaneSP.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        pnlSPs.setBackground(new java.awt.Color(255, 255, 255));
        pnlSPs.setLayout(new java.awt.GridLayout(0, 3, 15, 15));
        scrollPaneSP.setViewportView(pnlSPs);

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 240, 240)));

        tblChiTiet.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "MÃ SẢN PHẨM", "TÊN SẢN PHẨM", "", "SỐ LƯỢNG", "", "ĐƠN GIÁ", "THÀNH TIỀN", "XÓA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblChiTiet.setGridColor(new java.awt.Color(255, 255, 255));
        tblChiTiet.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblChiTiet.setRowHeight(22);
        tblChiTiet.setSelectionBackground(new java.awt.Color(83, 140, 150));
        tblChiTiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblChiTietMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblChiTiet);
        if (tblChiTiet.getColumnModel().getColumnCount() > 0) {
            tblChiTiet.getColumnModel().getColumn(0).setPreferredWidth(10);
            tblChiTiet.getColumnModel().getColumn(1).setPreferredWidth(50);
            tblChiTiet.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblChiTiet.getColumnModel().getColumn(3).setPreferredWidth(10);
            tblChiTiet.getColumnModel().getColumn(4).setPreferredWidth(40);
            tblChiTiet.getColumnModel().getColumn(5).setPreferredWidth(10);
            tblChiTiet.getColumnModel().getColumn(8).setPreferredWidth(5);
        }

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Chi tiết đơn hàng số:");

        lblMaDH.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Tổng số tiền:");

        lblTongTien.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTongTien.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel10.setText("VNĐ");

        cboGioiTinh.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboGioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Nam", "Nữ" }));
        cboGioiTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboGioiTinhActionPerformed(evt);
            }
        });

        cboNhaCC.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboNhaCC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All" }));
        cboNhaCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNhaCCActionPerformed(evt);
            }
        });

        cboLoai.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboLoai.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));
        cboLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btnCapNhat.setText("Cập nhật");
        btnCapNhat.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCapNhat.setkBorderRadius(15);
        btnCapNhat.setkEndColor(new java.awt.Color(51, 0, 255));
        btnCapNhat.setkHoverEndColor(new java.awt.Color(83, 140, 150));
        btnCapNhat.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnCapNhat.setkHoverStartColor(new java.awt.Color(40, 61, 90));
        btnCapNhat.setkPressedColor(new java.awt.Color(83, 140, 150));
        btnCapNhat.setkSelectedColor(new java.awt.Color(83, 140, 150));
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnXuatHD.setText("Xuất hóa đơn");
        btnXuatHD.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnXuatHD.setkBorderRadius(15);
        btnXuatHD.setkEndColor(new java.awt.Color(51, 0, 255));
        btnXuatHD.setkHoverEndColor(new java.awt.Color(83, 140, 150));
        btnXuatHD.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnXuatHD.setkHoverStartColor(new java.awt.Color(40, 61, 90));
        btnXuatHD.setkPressedColor(new java.awt.Color(83, 140, 150));
        btnXuatHD.setkSelectedColor(new java.awt.Color(83, 140, 150));
        btnXuatHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatHDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnXuatHD, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnXuatHD, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPaneSP)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboNhaCC, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))
                            .addComponent(jScrollPane2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(jLabel10))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, 0)
                                        .addComponent(lblMaDH))
                                    .addComponent(jLabel1))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jSeparator2))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pnlTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboNhaCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneSP, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addComponent(lblMaDH, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseClicked
        this.dispose();
    }//GEN-LAST:event_lblCloseMouseClicked

    private void lblCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseEntered
        lblClose.setBackground(new java.awt.Color(204,0,0));
        lblClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/shoessys/icon/icons8_delete_15px_1.png")));
    }//GEN-LAST:event_lblCloseMouseEntered

    private void lblCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseExited
        lblClose.setBackground(new java.awt.Color(255,255,255));
        lblClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/shoessys/icon/icons8_delete_15px.png")));
    }//GEN-LAST:event_lblCloseMouseExited

    private void pnlTitleMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTitleMouseDragged
        int xX = evt.getXOnScreen();
        int yY = evt.getYOnScreen();

        this.setLocation(xX - x, yY - y);
    }//GEN-LAST:event_pnlTitleMouseDragged

    private void pnlTitleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTitleMousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_pnlTitleMousePressed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        this.fillDanhSachSP();
    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchFocusGained
        if(txtSearch.getText().equals("Tên sản phẩm")){
            txtSearch.setText("");
            txtSearch.setForeground(new java.awt.Color(0,0,0));
        }
    }//GEN-LAST:event_txtSearchFocusGained

    private void txtSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchFocusLost
       if(txtSearch.getText().equals("")){
            txtSearch.setText("Tên sản phẩm");
            txtSearch.setForeground(new java.awt.Color(153,153,153));
        }
    }//GEN-LAST:event_txtSearchFocusLost

    private void cboNhaCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNhaCCActionPerformed
        if(cboNhaCC.getSelectedItem()!=null)this.fillDanhSachSP();
    }//GEN-LAST:event_cboNhaCCActionPerformed

    private void cboGioiTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboGioiTinhActionPerformed
        if(cboGioiTinh.getSelectedItem()!=null)this.fillDanhSachSP();
    }//GEN-LAST:event_cboGioiTinhActionPerformed

    private void cboLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiActionPerformed
        if(cboLoai.getSelectedItem()!=null)this.fillDanhSachSP();
    }//GEN-LAST:event_cboLoaiActionPerformed

    private void tblChiTietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblChiTietMouseClicked
        int column = tblChiTiet.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = evt.getY()/tblChiTiet.getRowHeight();
        if(row < tblChiTiet.getRowCount() && row >=0 && column< tblChiTiet.getColumnCount() && column >=0){
           Object value = tblChiTiet.getValueAt(row, column);
            if(value instanceof JButton){
                ((JButton)value).doClick();
                JButton boton = (JButton) value;
                
                if(boton.getName().equals("tru")){
                    this.downSoLuong();
                    fillTable();
                }
                if(boton.getName().equals("cong")){
                    this.upSoLuong();
                    fillTable();
                }
            }
        }
    }//GEN-LAST:event_tblChiTietMouseClicked

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        this.capNhat();
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnXuatHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatHDActionPerformed
        this.xuatHoaDon();
    }//GEN-LAST:event_btnXuatHDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChiTietDonHangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChiTietDonHangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChiTietDonHangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChiTietDonHangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChiTietDonHangJDialog dialog = new ChiTietDonHangJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KButton btnCapNhat;
    private keeptoo.KButton btnXuatHD;
    private javax.swing.JComboBox<String> cboGioiTinh;
    private javax.swing.JComboBox cboLoai;
    private javax.swing.JComboBox<String> cboNhaCC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblClose;
    private static javax.swing.JLabel lblMaDH;
    private static javax.swing.JLabel lblTongTien;
    private javax.swing.JPanel pnlSPs;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JScrollPane scrollPaneSP;
    private static javax.swing.JTable tblChiTiet;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
    
    static int madh;
    int makh;
    String tenkh;
    String ngaydat;
    private int x , y;
    static DonHangChiTietDAO dao = new DonHangChiTietDAO();
    LoaiDAO ldao = new LoaiDAO();
    NhaCungCapDAO nccdao = new NhaCungCapDAO();
    static SanPhamDAO spdao = new SanPhamDAO();
    static Locale vn = new Locale("vi", "VN");
    static NumberFormat VND = NumberFormat.getCurrencyInstance(vn);
    private void init() {
        setIconImage(Ximage.APP_ICON);
        scrollPaneSP.getVerticalScrollBar().setUnitIncrement(16);
        lblMaDH.setText(String.valueOf(madh));
        setLocationRelativeTo(null);
        this.fillComboBoxNCC();
        this.fillComboBoxLoai();
        this.fillDanhSachSP();
        fillTable();
    }
    
    void fillComboBoxNCC(){
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboNhaCC.getModel();
        List<NhaCungCap> list = nccdao.selectALL();
        for(NhaCungCap ncc:list){
            model.addElement(ncc);
        }
    }
    void fillComboBoxLoai(){
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboLoai.getModel();
        List<Loai> list = ldao.selectALL();
        for(Loai loai:list){
            model.addElement(loai);
        }
    }
    String maNCC(){
        String mancc;
        if(cboNhaCC.getSelectedItem().equals("All")){
            mancc = "";
        }else{
            NhaCungCap ncc = (NhaCungCap) cboNhaCC.getSelectedItem();
            mancc = String.valueOf(ncc.getMaNCC());
        }
        return mancc;
    }
    String maLoai(){
        String maloai;
        if(cboLoai.getSelectedItem().equals("All")){
            maloai = "";
        }else{
            Loai loai = (Loai) cboLoai.getSelectedItem();
            maloai = String.valueOf(loai.getMaLoai());
        }
        return maloai;
    }
    
    String gioiTinh(){
        String gioitinh;
        if(cboGioiTinh.getSelectedItem().equals("All")){
            gioitinh = "";
        }else{
            gioitinh = (cboGioiTinh.getSelectedItem().equals("Nam")?"1":"0");
        }
        return gioitinh;
    }
    void fillDanhSachSP(){
        String search = txtSearch.getText();
        if(txtSearch.getText().equals("Tên sản phẩm"))search="";
        try {
            pnlSPs.removeAll();
            List<SanPham> list = spdao.selectSearch(search, maNCC(),maLoai(), gioiTinh());
            for(SanPham sp:list){
                pnlSPs.add(new SPJPanel(madh, sp.getMaSP(),sp.getTenSP(), 
                        sp.getHinh(), sp.getDonGia()));   
            }
            pnlSPs.updateUI();
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        } 
    }
    
    static void fillTable(){
        DefaultTableModel model = (DefaultTableModel) tblChiTiet.getModel();
        model.setRowCount(0);
        tblChiTiet.setDefaultRenderer(Object.class, new Xrender());
        JButton btnTru = new JButton("-");btnTru.setName("tru");
        JButton btnCong = new JButton("+");btnCong.setName("cong");
        try {
            List<DonHangChiTiet> list = dao.selectByG(madh);
            for(int i=0;i<list.size();i++){
               DonHangChiTiet dhct = list.get(i);
               String tensp = spdao.selectById(dhct.getMaSP()).getTenSP();
               String dongia = String.valueOf(VND.format(dhct.getDonGia()));
               String thanhtien = String.valueOf(VND.format(dhct.getSoLuong()*dhct.getDonGia()));
               Object[] row ={
                   i+1, dhct.getMaSP(), tensp, btnTru , dhct.getSoLuong(), btnCong,
                   dongia.replace("đ", ""), thanhtien.replace("đ", ""), false
               };
               model.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        tongTien();
    }
    void upSoLuong(){
        int row = tblChiTiet.getSelectedRow();
        int masp = Integer.parseInt(tblChiTiet.getValueAt(row, 1).toString());
        int soluong = Integer.parseInt(tblChiTiet.getValueAt(row, 4).toString());
        soluong+=1;
        try {
            SanPham sp = spdao.selectById(masp);
            if(sp.getSoLuong()==0){
                MsgBox.alert(this, "Sản phẩm này hiện tại hết hàng!");
                return;
            }
            DonHangChiTiet dhct = dao.selectById(masp);
            dhct.setMaDH(Integer.parseInt(lblMaDH.getText()));
            dhct.setSoLuong(soluong);
            dao.update(dhct);
            int slsp = sp.getSoLuong();
            slsp--;
            sp.setSoLuong(slsp);
            spdao.update(sp);
        } catch (Exception e) {
        }
        tongTien();
    }
    void downSoLuong(){
        int row = tblChiTiet.getSelectedRow();
        int masp = Integer.parseInt(tblChiTiet.getValueAt(row, 1).toString());
        int soluong = Integer.parseInt(tblChiTiet.getValueAt(row, 4).toString());
        if(soluong>0)soluong-=1;
        try {
            DonHangChiTiet dhct = dao.selectById(masp);
            dhct.setMaDH(Integer.parseInt(lblMaDH.getText()));
            dhct.setSoLuong(soluong);
            dao.update(dhct);
            SanPham sp = spdao.selectById(masp);
            int slsp = sp.getSoLuong();
            slsp++;
            sp.setSoLuong(slsp);
            spdao.update(sp);
        } catch (Exception e) {
        }
        tongTien();
    }
    void capNhat(){
        for(int i=0;i<tblChiTiet.getRowCount();i++){
            int madh = Integer.parseInt(lblMaDH.getText());
            int masp = Integer.parseInt(tblChiTiet.getValueAt(i, 1).toString());
            int soluong = Integer.parseInt(tblChiTiet.getValueAt(i, 4).toString());
            Double dongia = Double.parseDouble(tblChiTiet.getValueAt(i, 6).toString().replace(".", ""));
            Boolean isDelete = (Boolean) tblChiTiet.getValueAt(i, 8);
            if(isDelete){
                SanPham sp = spdao.selectById(masp);
                sp.setSoLuong(sp.getSoLuong()+soluong);
                spdao.update(sp);
                dao.delete(madh, masp);
            }else{
                if(soluong>=0){
                    DonHangChiTiet dhct = dao.selectById(madh, masp);
                    SanPham sp = spdao.selectById(masp);
                    if(sp.getSoLuong()==0){
                        MsgBox.alert(this, "Sản phẩm này hiện tại hết hàng!");
                        tblChiTiet.setValueAt(dhct.getSoLuong(), i, 4);
                        return;
                    }
                    if(soluong==0){
                        sp.setSoLuong(sp.getSoLuong()+dhct.getSoLuong());
                        spdao.update(sp);
                    }else if(soluong>dhct.getSoLuong()){
                        sp.setSoLuong(sp.getSoLuong()-(soluong-dhct.getSoLuong()));
                        spdao.update(sp);
                    }else if(soluong<dhct.getSoLuong()){
                        sp.setSoLuong(sp.getSoLuong()+(dhct.getSoLuong()-soluong));
                        spdao.update(sp);
                    }
                    dhct = new DonHangChiTiet();
                    dhct.setMaDH(madh);
                    dhct.setMaSP(masp);
                    dhct.setSoLuong(soluong);
                    dhct.setDonGia(dongia);
                    dao.update(dhct);
                }else{
                    MsgBox.alert(this, "Số lượng không được nhỏ hơn 0!");
                    return;
                } 
            }
        }
        fillTable();
        MsgBox.alert(this, "Cập nhật thành công!");
    }
    
    static void tongTien(){
        double tongtien = 0;
        for(int i=0;i<tblChiTiet.getRowCount();i++){
            tongtien+= Double.parseDouble(tblChiTiet.getValueAt(i, 7).toString().replace(".", ""));
        }
        String tien = String.valueOf(VND.format(tongtien));
        lblTongTien.setText(tien.replace("đ", ""));
    }
    
    void xuatHoaDon(){
        JFileChooser chooser = new JFileChooser();
        int x = chooser.showSaveDialog(this);
        if(x==JFileChooser.APPROVE_OPTION){
            File file = chooser.getSelectedFile();
            Document document = new Document(PageSize.A4, 50, 50, 50, 50);
            try {
                PdfWriter.getInstance(document, new FileOutputStream(file + ".pdf"));
                document.open();
                
                BaseFont baseFont = BaseFont.createFont("Font/vuArial.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                Font fontHeader = new Font(baseFont, 18f, Font.BOLD);
                Font fontBody = new Font(baseFont, 11f);
                
                Image image = Image.getInstance(getClass().getResource("/com/shoessys/icon/icons8_bee_32px.png"));
                Paragraph tenCTY = new Paragraph("SmartBees", fontBody);
                tenCTY.setSpacingBefore(-25);
                tenCTY.setIndentationLeft(35);
                Paragraph phCty = new Paragraph();
                phCty.add(image);
                phCty.add(tenCTY);
                
                Paragraph phHeader = new Paragraph("Hóa Đơn", fontHeader);
                phHeader.setAlignment(Element.ALIGN_CENTER);
                Paragraph phBody = new Paragraph();
                phBody.setSpacingBefore(20);
                Paragraph phMaDH = new Paragraph("Mã đơn hàng: "+madh, fontBody);
                Paragraph phMaKH = new Paragraph("Mã khách hàng: "+makh, fontBody);
                Paragraph phTenKH = new Paragraph("Tên khách hàng: "+tenkh, fontBody);
                Paragraph phNgayDat = new Paragraph("Ngày đặt: "+ngaydat, fontBody);
                phMaDH.setIndentationLeft(164);
                phMaKH.setIndentationLeft(154);
                phTenKH.setIndentationLeft(150);
                phNgayDat.setIndentationLeft(185);
                phBody.add(phMaDH);
                phBody.add(phMaKH);
                phBody.add(phTenKH);
                phBody.add(phNgayDat);
                
                Paragraph phTbl = new Paragraph();
                phTbl.setSpacingBefore(15);
                phTbl.setSpacingAfter(15);
                PdfPTable table = new PdfPTable(6);
                float[] cells = {20,70,100,50,50,70};
                table.setWidthPercentage(100);
                table.setTotalWidth(cells);
                for(int i=0;i<tblChiTiet.getColumnCount();i++){
                    if(i==3 || i==5 || i==8){
                        continue;
                    }
                    table.addCell(new Phrase(tblChiTiet.getColumnName(i),fontBody));
                }
                for(int i=0;i<tblChiTiet.getRowCount();i++){
                    for(int j=0;j<tblChiTiet.getColumnCount();j++){
                        if(j==3 || j==5 || j==8){
                            continue;
                        }
                        table.addCell(new Phrase(tblChiTiet.getValueAt(i, j).toString(), fontBody));
                    }
                }
                
                Paragraph phTongTien = new Paragraph("Tổng tiền: "+lblTongTien.getText()+" VNĐ", fontBody);
                phTongTien.setAlignment(Element.ALIGN_RIGHT);
                phTbl.add(table);
                phBody.add(phTbl);
                phBody.add(phTongTien);
                
                document.add(phCty);
                document.add(phHeader);
                document.add(phBody);
                document.close();
                MsgBox.alert(this, "Xuất hóa đơn thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Xuất hóa đơn thất bại!");
            }
        }
    }
}

